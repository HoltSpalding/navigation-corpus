turn right
(lambda $0:a (and:<t*,t> (turn:<a,t> $0) (dir:<a,<dir,t>> $0 right:dir)))
map=jelly instruction=EMWC_Jelly0_6_1_Dirs_1 index=3 y=6 x=1
RIGHT(19,18,0);(19,18,90)

turn left
(lambda $0:a (and:<t*,t> (turn:<a,t> $0) (dir:<a,<dir,t>> $0 left:dir)))
map=jelly instruction=EMWC_Jelly0_6_1_Dirs_1 index=5 y=6 x=1
LEFT(20,18,90);(20,18,0)

walk to the far end
(lambda $0:a (and:<t*,t> (move:<a,t> $0) (to:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (eq:<e,<e,t>> $1 (argmax:<<e,t>,<<e,n>,e>> (lambda $2:e (end:<ps,<ps,t>> $2 (a:<<e,t>,e> hall:<ps,t>))) frontdist:<ps,n>)))))))
map=jelly instruction=EDA_Jelly0_4_5_Dirs_1 index=3 y=4 x=5
FORWARD(15,18,90);FORWARD(16,18,90);FORWARD(17,18,90);FORWARD(18,18,90);FORWARD(19,18,90);(20,18,90)

turn left and move to the end of the green octagon flooring
(lambda $0:a[] (and:<t*,t> (turn:<a,t> (i:<a[],<ind,a>> $0 0:ind)) (dir:<a,<dir,t>> (i:<a[],<ind,a>> $0 0:ind) left:dir) (bef:<a,<a,t>> (i:<a[],<ind,a>> $0 0:ind) (i:<a[],<ind,a>> $0 1:ind)) (move:<a,t> (i:<a[],<ind,a>> $0 1:ind)) (to:<a,<ps,t>> (i:<a[],<ind,a>> $0 1:ind) (io:<<e,t>,e> (lambda $2:e (end:<ps,<ps,t>> $2 (io:<<e,t>,e> (lambda $3:e (and:<t*,t> (honeycomb:<ps,t> $3) (hall:<ps,t> $3))))))))))
map=l instruction=WLH_L0_6_3_Dirs_1 index=3 y=6 x=3
LEFT(21,23,270);FORWARD(21,23,180);(21,24,180)

this is position x
(intersect:<ps,<ps,t>> you:ps x:ps)
map=jelly instruction=EMWC_Jelly0_4_5_Dirs_1 index=8 y=4 x=5
(21,17,90)

turn right
(lambda $0:a (and:<t*,t> (turn:<a,t> $0) (dir:<a,<dir,t>> $0 right:dir)))
map=jelly instruction=EDA_Jelly0_4_1_Dirs_1 index=2 y=4 x=1
RIGHT(15,17,0);(15,17,90)

walk forward four times
(lambda $0:a (and:<t*,t> (move:<a,t> $0) (dir:<a,<dir,t>> $0 forward:dir) (len:<a,<n,t>> $0 4:n)))
map=l instruction=EDA_L0_3_1_Dirs_1 index=9 y=3 x=1
FORWARD(23,21,0);FORWARD(23,20,0);FORWARD(23,19,0);FORWARD(23,18,0);(23,17,0)

you should be facing the longer wooden floored alley , if not turn around
(front:<ps,<ps,t>> you:ps (io:<<e,t>,e> (lambda $1:e (eq:<e,<e,t>> $1 (argmax:<<e,t>,<<e,n>,e>> (lambda $2:e (end:<ps,<ps,t>> $2 (a:<<e,t>,e> (lambda $3:e (and:<t*,t> (wood:<ps,t> $3) (hall:<ps,t> $3)))))) dist:<ps,n>)))))
map=jelly instruction=WLH_Jelly0_3_5_Dirs_2 index=3 y=3 x=5
(20,17,90)

walk forward once
(lambda $0:a (and:<t*,t> (move:<a,t> $0) (dir:<a,<dir,t>> $0 forward:dir) (len:<a,<n,t>> $0 1:n)))
map=jelly instruction=EDA_Jelly0_6_4_Dirs_1 index=1 y=6 x=4
FORWARD(18,19,90);(19,19,90)

this is x
(intersect:<ps,<ps,t>> you:ps x:ps)
map=l instruction=WLH_L0_3_4_Dirs_1 index=7 y=3 x=4
(24,21,90)

walk forward twice
(lambda $0:a (and:<t*,t> (move:<a,t> $0) (dir:<a,<dir,t>> $0 forward:dir) (len:<a,<n,t>> $0 2:n)))
map=jelly instruction=EDA_Jelly0_6_1_Dirs_1 index=7 y=6 x=1
FORWARD(20,18,0);FORWARD(20,17,0);(20,16,0)

turn right
(lambda $0:a (and:<t*,t> (turn:<a,t> $0) (dir:<a,<dir,t>> $0 right:dir)))
map=l instruction=EMWC_L0_4_5_Dirs_1 index=2 y=4 x=5
RIGHT(23,21,270);(23,21,0)

walk forward once
(lambda $0:a (and:<t*,t> (move:<a,t> $0) (dir:<a,<dir,t>> $0 forward:dir) (len:<a,<n,t>> $0 1:n)))
map=l instruction=EDA_L0_3_5_Dirs_1 index=1 y=3 x=5
FORWARD(19,23,180);(19,24,180)

turning left you see flowered carpet
(lambda $0:a (and:<t*,t> (turn:<a,t> $0) (dir:<a,<dir,t>> $0 left:dir) (post:<a,<t,t>> $0 (front:<ps,<ps,t>> you:ps (a:<<e,t>,e> (lambda $2:e (and:<t*,t> (rose:<ps,t> $2) (hall:<ps,t> $2))))))))
map=jelly instruction=WLH_Jelly0_1_6_Dirs_1 index=3 y=1 x=6
LEFT(19,18,270);(19,18,180)

go forward along the brick hall six segments to the intersection with the wooden-floored hall , passing a hatrack and a lamp
(lambda $0:a (and:<t*,t> (move:<a,t> $0) (dir:<a,<dir,t>> $0 forward:dir) (pre:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (hall:<ps,t> $1) (brick:<ps,t> $1))))) (len:<a,<n,t>> $0 6:n) (to:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $2:e (and:<t*,t> (intersection:<ps,t> $2) (intersect:<ps,<ps,t>> (io:<<e,t>,e> (lambda $3:e (and:<t*,t> (hall:<ps,t> $3) (wood:<ps,t> $3)))) $2))))) (pass:<a,<ps,t>> $0 (a:<<e,t>,e> hatrack:<ps,t>)) (pass:<a,<ps,t>> $0 (a:<<e,t>,e> lamp:<ps,t>))))
map=l instruction=EMWC_L0_6_1_Dirs_1 index=4 y=6 x=1
FORWARD(23,23,0);FORWARD(23,22,0);FORWARD(23,21,0);FORWARD(23,20,0);FORWARD(23,19,0);FORWARD(23,18,0);(23,17,0)

there is a bench in the hall to your right
(exists:<<e,t>,t> (lambda $1:e (eq:<e,<e,t>> $1 (a:<<e,t>,e> (lambda $2:e (and:<t*,t> (sofa:<ps,t> $2) (intersect:<ps,<ps,t>> (io:<<e,t>,e> (lambda $3:e (and:<t*,t> (hall:<ps,t> $3) (front:<ps,<ps,t>> (orient:<ps,<dir,ps>> you:ps right:dir) $3)))) $2)))))))
map=l instruction=EMWC_L0_7_6_Dirs_1 index=4 y=7 x=6
(22,23,90)

go to the opposite end of the blue-tiled hall , passing the chair
(lambda $0:a (and:<t*,t> (move:<a,t> $0) (to:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (eq:<e,<e,t>> $1 (argmax:<<e,t>,<<e,n>,e>> (lambda $2:e (end:<ps,<ps,t>> $2 (io:<<e,t>,e> (lambda $3:e (and:<t*,t> (hall:<ps,t> $3) (blue:<ps,t> $3)))))) frontdist:<ps,n>))))) (pass:<a,<ps,t>> $0 (io:<<e,t>,e> chair:<ps,t>))))
map=jelly instruction=EMWC_Jelly0_4_1_Dirs_1 index=2 y=4 x=1
FORWARD(15,18,90);FORWARD(16,18,90);FORWARD(17,18,90);FORWARD(18,18,90);FORWARD(19,18,90);(20,18,90)

move to the flowered carpet and turn left
(lambda $0:a[] (and:<t*,t> (move:<a,t> (i:<a[],<ind,a>> $0 0:ind)) (to:<a,<ps,t>> (i:<a[],<ind,a>> $0 0:ind) (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (rose:<ps,t> $1) (hall:<ps,t> $1))))) (bef:<a,<a,t>> (i:<a[],<ind,a>> $0 0:ind) (i:<a[],<ind,a>> $0 1:ind)) (turn:<a,t> (i:<a[],<ind,a>> $0 1:ind)) (dir:<a,<dir,t>> (i:<a[],<ind,a>> $0 1:ind) left:dir)))
map=jelly instruction=WLH_Jelly0_6_7_Dirs_2 index=0 y=6 x=7
FORWARD(18,19,90);LEFT(19,19,90);(19,19,0)

move straight into the corner
(lambda $0:a (and:<t*,t> (move:<a,t> $0) (dir:<a,<dir,t>> $0 forward:dir) (to:<a,<ps,t>> $0 (io:<<e,t>,e> corner:<ps,t>))))
map=grid instruction=WLH_Grid0_6_5_Dirs_1 index=6 y=6 x=5
FORWARD(0,11,90);(1,11,90)

this intersection contains an easel
(intersect:<ps,<ps,t>> you:ps (a:<<e,t>,e> (lambda $2:e (and:<t*,t> (intersection:<ps,t> $2) (intersect:<ps,<ps,t>> (a:<<e,t>,e> easel:<ps,t>) $2)))))
map=jelly instruction=EMWC_Jelly0_4_2_Dirs_1 index=5 y=4 x=2
(20,17,0)

walk forward three times
(lambda $0:a (and:<t*,t> (move:<a,t> $0) (dir:<a,<dir,t>> $0 forward:dir) (len:<a,<n,t>> $0 3:n)))
map=l instruction=EDA_L0_5_7_Dirs_1 index=1 y=5 x=7
FORWARD(23,18,180);FORWARD(23,19,180);FORWARD(23,20,180);(23,21,180)

go forward one segment to the empty corner
(lambda $0:a (and:<t*,t> (move:<a,t> $0) (dir:<a,<dir,t>> $0 forward:dir) (len:<a,<n,t>> $0 1:n) (to:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (corner:<ps,t> $1) (empty:<ps,t> $1)))))))
map=jelly instruction=EMWC_Jelly0_1_2_Dirs_1 index=5 y=1 x=2
FORWARD(23,15,180);(23,16,180)

turn left and walk forward once
(lambda $0:a[] (and:<t*,t> (turn:<a,t> (i:<a[],<ind,a>> $0 0:ind)) (dir:<a,<dir,t>> (i:<a[],<ind,a>> $0 0:ind) left:dir) (bef:<a,<a,t>> (i:<a[],<ind,a>> $0 0:ind) (i:<a[],<ind,a>> $0 1:ind)) (move:<a,t> (i:<a[],<ind,a>> $0 1:ind)) (dir:<a,<dir,t>> (i:<a[],<ind,a>> $0 1:ind) forward:dir) (len:<a,<n,t>> (i:<a[],<ind,a>> $0 1:ind) 1:n)))
map=l	instruction=EDA_L0_7_1_Dirs_1 index=3 y=7 x=1
LEFT(23,17,0);FORWARD(23,17,270);(22,17,270)

walk to the end of the yellow hall
(lambda $0:a (and:<t*,t> (move:<a,t> $0) (to:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (end:<ps,<ps,t>> $1 (io:<<e,t>,e> (lambda $2:e (and:<t*,t> (hall:<ps,t> $2) (honeycomb:<ps,t> $2))))))))))
map=jelly instruction=EDA_Jelly0_4_1_Dirs_1 index=1 y=4 x=1
FORWARD(15,20,0);FORWARD(15,19,0);FORWARD(15,18,0);(15,17,0)

turn right and you see grass carpet in front of you and green octagon carpet down the next alley
(lambda $0:a (and:<t*,t> (turn:<a,t> $0) (dir:<a,<dir,t>> $0 right:dir) (post:<a,<t,t>> $0 (and:<t*,t> (exists:<<e,t>,t> (lambda $1:e (and:<t*,t> (grass:<ps,t> $1) (hall:<ps,t> $1) (front:<ps,<ps,t>> you:ps $1)))) (exists:<<e,t>,t> (lambda $2:e (and:<t*,t> (honeycomb:<ps,t> $2) (hall:<ps,t> $2) (intersect:<ps,<ps,t>> (io:<<e,t>,e> (lambda $3:e (eq:<e,<e,t>> $3 (order:<<ps,t>,<<ps,n>,<n,ps>>> intersection:<ps,t> frontdist:<ps,n> 1:n)))) $2))))))))
map=grid instruction=WLH_Grid0_6_4_Dirs_1 index=1 y=6 x=4
RIGHT(2,5,0);(2,5,90)

go forward along the stone hall one segment to the intersection with a bare concrete hall
(lambda $0:a (and:<t*,t> (move:<a,t> $0) (dir:<a,<dir,t>> $0 forward:dir) (pre:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (hall:<ps,t> $1) (stone:<ps,t> $1))))) (len:<a,<n,t>> $0 1:n) (to:<a,<ps,t>> $0 (io:<<e,t>,e> (lambda $2:e (and:<t*,t> (intersection:<ps,t> $2) (intersect:<ps,<ps,t>> (a:<<e,t>,e> (lambda $3:e (and:<t*,t> (hall:<ps,t> $3) (cement:<ps,t> $3)))) $2)))))))
map=l instruction=EMWC_L0_5_6_Dirs_1 index=5 y=5 x=6
FORWARD(23,23,270);(22,23,270)

turn left
(lambda $0:a (and:<t*,t> (turn:<a,t> $0) (dir:<a,<dir,t>> $0 left:dir)))
map=l instruction=EMWC_L0_6_5_Dirs_1 index=3 y=6 x=5
LEFT(23,23,90);(23,23,0)

face the hat rack and move to it
(lambda $0:a[] (and:<t*,t> (post:<a,<t,t>> (i:<a[],<ind,a>> $0 0:ind) (front:<ps,<ps,t>> you:ps (io:<<e,t>,e> hatrack:<ps,t>))) (bef:<a,<a,t>> (i:<a[],<ind,a>> $0 0:ind) (i:<a[],<ind,a>> $0 1:ind)) (move:<a,t> (i:<a[],<ind,a>> $0 1:ind)) (to:<a,<ps,t>> (i:<a[],<ind,a>> $0 1:ind) (io:<<e,t>,e> hatrack:<ps,t>))))
map=grid instruction=WLH_Grid0_5_3_Dirs_1 index=0 y=5 x=3
LEFT(1,11,270);LEFT(1,11,180);LEFT(1,11,90);LEFT(1,11,0);FORWARD(1,11,270);(0,11,270)

face and move forward to the hatrack
(lambda $0:a[] (and:<t*,t> (post:<a,<t,t>> (i:<a[],<ind,a>> $0 0:ind) (front:<ps,<ps,t>> you:ps (io:<<e,t>,e> hatrack:<ps,t>))) (bef:<a,<a,t>> (i:<a[],<ind,a>> $0 0:ind) (i:<a[],<ind,a>> $0 1:ind)) (move:<a,t> (i:<a[],<ind,a>> $0 1:ind)) (dir:<a,<dir,t>> (i:<a[],<ind,a>> $0 1:ind) forward:dir) (to:<a,<ps,t>> (i:<a[],<ind,a>> $0 1:ind) (io:<<e,t>,e> hatrack:<ps,t>))))
map=grid instruction=WLH_Grid0_5_2_Dirs_1 index=0 y=5 x=2
LEFT(1,11,270);LEFT(1,11,180);LEFT(1,11,90);LEFT(1,11,0);FORWARD(1,11,270);(0,11,270)

the square containing the easel is position x
(eq:<e,<e,t>> (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (intersection:<ps,t> $1) (intersect:<ps,<ps,t>> (io:<<e,t>,e> easel:<ps,t>) $1)))) x:ps)
map=grid instruction=EMWC_Grid0_7_2_Dirs_1 index=1 y=7 x=2
(3,8,90)

place your back to the wall of the t intersection
(lambda $0:a (post:<a,<t,t>> $0 (intersect:<ps,<ps,t>> (io:<<e,t>,e> (lambda $1:e (and:<t*,t> (wall:<ps,t> $1) (intersect:<ps,<ps,t>> (io:<<e,t>,e> (lambda $2:e (t_intersection:<ps,t> $2))) $1)))) (orient:<ps,<dir,ps>> you:ps back:dir))))
map=grid instruction=EMWC_Grid0_3_4_Dirs_1 index=0 y=3 x=4
RIGHT(0,9,0);(0,9,90)
