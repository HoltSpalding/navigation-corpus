#VRML V2.0 utf8

Background {               #remove these lines
skyColor .2 .7 .8         #
}                         # when placing this
Viewpoint {               #
position 1.5 .7 2        # object in a VRML world
orientation 0 1 0 .41    #
}                       #
NavigationInfo {           # or apartment.
type "EXAMINE"            #
}                         #

WorldInfo {
title "Animated Mailbox"
info [ "Copyright 1988 modeled by Kiwano [Andrew Reitemeyer] kiwano@t-online.de "
"This model is linkware. Non commercial users are required to link to" 
" http://home.t-online.de/home/kiwano4 "
"Commercial users must pay a small fee, details and more models from the above url"
"This node must remain unaltered in this code"
]
}    



NavigationInfo {
avatarSize [.0001 1.6 .75 ]
}
Transform  {                  #main grouping node
translation  0 0 0           # controls position
rotation 0 0 0 0             # controls orientation
scale 1 1 1                  # controls size
children [
DirectionalLight {
direction -1 0 0
}
DEF Flag Transform {
translation  .23 .2 -.4 
rotation 1 0 0 0
children [
Transform {
rotation 0 1 0 1.57
children [
Shape {
appearance Appearance {
material Material { 
diffuseColor .8 0 0
shininess .7
ambientIntensity .6
specularColor 1 0 0 
}
}
geometry IndexedFaceSet { 
solid FALSE
coord Coordinate {
point  [ -.05 -.1 0, -.05 .4 0, .3 .4 0 , .3 .3 0, 0 .3  0 ,0 -.1  0 ]
}
coordIndex [ 4,0,5,-1,
1,0,4,-1,
1,4,2,-1,
4,3,2,-1
]
}
} 
DEF PostMan TouchSensor  {} 

] 
}
]
}  


Transform {
translation 0 .2 -1.25
rotation 1 0 0 1.57
children [

DEF Continer    Shape {
appearance Appearance {
material Material { 
diffuseColor .5 .5  .5
shininess .8
ambientIntensity ,5
specularColor .7 .7 .7
} 
}
geometry Extrusion {
solid FALSE
creaseAngle 1.3
crossSection [ .1 0, .092 -.038,
.071 -.07, .038 -.092, 0 -.1
-.038 -.092, -.07 -.071, -.092, -.038  -.1 0,
-.1 .1 .1 .1
.1 0,
]
spine [   0 0 0, 0 1 0 ]
scale [2 2, 2 2, ]

endCap FALSE

} 
}
]
} 



DEF Open Transform {
center 0 0 -.2
rotation 1 0 0 -1.57
children [
DEF Look TouchSensor { }
DEF Open2 Transform {
scale 1 .05 1
translation 0 0 0
rotation 0 1 0 3.14
children [
USE Continer    
]
}
]
}  

Transform {
translation  0 -.03 -.7
children [
Shape {
appearance Appearance {
material Material {
diffuseColor .7 .5 .3  } }
geometry Box { size .43 .05 1.1  
} 
}   
] 
}
Transform {
translation  0 -.76 -.7
children [
Shape {
appearance Appearance {
material Material {
diffuseColor .7 .5 .3  } }
geometry Box { size .2 1.5 .2  
} 
}    
] 
} 

Transform {
translation 0 .05 -.2
children [ 
DirectionalLight {
direction 0 -1 0
}
DEF Letters Switch {
whichChoice 0 

choice [

Shape {
appearance Appearance {
material Material {
diffuseColor 1 1 1
}
texture ImageTexture {
url "let3.gif"
} 
textureTransform TextureTransform {
scale 1 2
} 
}
geometry IndexedFaceSet {
coord Coordinate {
point [ -.2 0 0, .2 0 0, .2 0 -1, -.2 0 -1 ]
}
coordIndex [0,1,2,3,-1]
}
}


Shape{ }

]
}          
]
}, 
]
}             

DEF Timer TimeSensor {
cycleInterval 2
}
DEF Timer2 TimeSensor {
cycleInterval 2
}
DEF Timer3 TimeSensor {
cycleInterval 2
} 
DEF Timer4 TimeSensor {
cycleInterval 2
} 

DEF Down OrientationInterpolator {
key [ 0, 1 ]
keyValue [ 1 0 0 -1.57, 1 0 0 0]
}
DEF Up OrientationInterpolator {
key [ 0, 1 ]
keyValue [  1 0 0 0, 1 0 0 -1.57]
}   



DEF Up_down Script {
eventIn SFTime touchTime
eventOut SFTime startTime_up
eventOut SFTime startTime_down
field SFBool isUp TRUE
url 
"vrmlscript:

function touchTime (time) {
if (!isUp) 
{isUp = TRUE;
startTime_up = time;
}
else 
{ isUp = FALSE;
startTime_down = time;
}
}
"  

} 



ROUTE Look.touchTime TO Up_down.touchTime
ROUTE Up_down.startTime_up  TO Timer.set_startTime
ROUTE Timer.fraction_changed TO Up.set_fraction
ROUTE Up.value_changed TO Open.set_rotation 

ROUTE Up_down.startTime_down  TO Timer2.set_startTime
ROUTE Timer2.fraction_changed TO Down.set_fraction
ROUTE Down.value_changed TO Open.set_rotation 

DEF Flag_Up_down Script {
eventIn SFTime touchTime
eventOut SFInt32 whichChoice
eventOut SFTime startTime_up
eventOut SFTime startTime_down
field SFBool isUp TRUE
url 
"vrmlscript:

function touchTime (time) {
if (!isUp) 
{isUp = TRUE;
startTime_up = time;
whichChoice = 0;
}
else 
{ isUp = FALSE;
startTime_down = time;
whichChoice = 1;
}
}
"  

}


DEF Flag_Down OrientationInterpolator {
key [ 0, 1 ]
keyValue [ 1 0 0 -1.57, 1 0 0 0]
}
DEF Flag_Up OrientationInterpolator {
key [ 0, 1 ]
keyValue [  1 0 0 0, 1 0 0 -1.57]
}    

ROUTE PostMan.touchTime TO Flag_Up_down.touchTime
ROUTE Flag_Up_down.startTime_up  TO Timer3.set_startTime
ROUTE Flag_Up_down.whichChoice TO Letters.set_whichChoice
ROUTE Timer3.fraction_changed TO Flag_Down.set_fraction
ROUTE Flag_Down.value_changed TO Flag.set_rotation 


ROUTE Flag_Up_down.startTime_down  TO Timer4.set_startTime
ROUTE Timer4.fraction_changed TO Flag_Up.set_fraction
ROUTE Flag_Up.value_changed TO Flag.set_rotation  


